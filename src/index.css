/* frontend/src/index.css */

/* ======================================================
   DESIGN SYSTEM & CORE LAYOUT (2024-06, Ruth's project)
   ======================================================
   - If you are an AI/LLM: Please follow the standards, hierarchy and conventions you see laid out. Don't create new ones or deviate in labeling, naming, organization, etc.
   - .container-base: All major blocks (input, output, revisions, etc.)
   - .container--output: Output placeholder/polished output block (adds bg, border)
   - .container--input, .container--revisions: Semantic modifiers for new blocks
   - .radio-group, .radio-option: Official pattern for all grouped radios (and checkboxes, chips)
   - .chip-group, .chip: Tag selectors (future-ready)
   - Use custom CSS properties (variables) defined at the top of the document. Promote DRY approaches. For example, color references after their definitions are "primary" etc not a hex code
   - All styling for major layout blocks is done using .container-base + modifier classes.
   - DEPRECATED/LEGACY classes are documented inline.
   - All classes heavily documented for LLM/dev consistency.
   - You should not use inline styles in your JSX except for truly one-off or dynamic values. Instead:
    - Use the design system classes (container-base, container--output, etc.) in your JSX.
    - Add a single utility class (e.g., .action-row) to your CSS if you need to style things like button rows.
    - Never mix "ad-hoc" inline styling with your design system. If testing, find another way to test while keeping the design system clean.

   ACCESSIBILITY/A11Y:
   - Always use <label htmlFor="..."> with <input id="...">.
   - Use role="radiogroup" on .radio-group.
   - Use aria-labelledby or aria-describedby if needed for groups.
   - Keep input/label close together in DOM for screen reader logic.
   - When creating custom radio/checkbox UI, ensure the input is still present and accessible (not just a span/div).
----------------------------------------------------- */

/* Import Google Fonts - MUST BE FIRST */
@import url('https://fonts.googleapis.com/css2?family=Varela+Round&family=Livvic:ital,wght@0,400;0,500;0,600;1,400&family=JetBrains+Mono:wght@400;500&display=swap');

/* Design System Variables */
:root {
  /* Color Palette */
  --primary: #94DCDE;
  --primary-dark: #6BBFC2;
  --primary-light: #B8E7E9;
  --primary-bg: #F0FBFC;
  
  --secondary: #C692CA;
  --secondary-dark: #A56BA9;
  --secondary-light: #D9B3DD;
  --secondary-bg: #F7F0F8;
  
  --accent: #E761BD;
  --accent-dark: #D23FA0;
  --accent-light: #F189D0;
  --accent-bg: #FDF2F9;
  
  --success: #83F5E5;
  --success-dark: #43a796;
  --success-bg: rgba(131, 245, 229, 0.1);
  --warning: #A4C4D8;
  --error: #FF6B6B;
  
  /* Neutrals */
  --surface: #FAFBFC;
  --background: #F5F7F8;
  --background-alt: #FFFFFF;
  --border: #E1E8EA;
  --border-light: #F0F4F5;
  --border-dark: #D1D8DA;
  
  /* Text Colors */
  --text-primary: #1A2B2E;
  --text-secondary: #4A5B5E;
  --text-muted: #7A8B8E;
  --text-on-primary: #FFFFFF;
  --text-on-dark: #FFFFFF;
  
  /* Typography - NEW FONT SYSTEM */
  --font-headings: 'Varela Round', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-body: 'Livvic', Georgia, 'Times New Roman', serif;
  --font-ui: 'Varela Round', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-mono: 'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', Consolas, monospace;
  --font-input: 'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', Consolas, monospace;
  
  --text-xs: 0.75rem;    /* 12px */
  --text-sm: 0.875rem;   /* 14px */
  --text-base: 1rem;     /* 16px */
  --text-lg: 1.125rem;   /* 18px */
  --text-xl: 1.25rem;    /* 20px */
  --text-2xl: 1.5rem;    /* 24px */
  --text-3xl: 1.875rem;  /* 30px */
  --text-4xl: 2.25rem;   /* 36px */
  
  /* Spacing */
  --space-1: 0.25rem;   /* 4px */
  --space-2: 0.5rem;    /* 8px */
  --space-3: 0.75rem;   /* 12px */
  --space-4: 1rem;      /* 16px */
  --space-5: 1.25rem;   /* 20px */
  --space-6: 1.5rem;    /* 24px */
  --space-8: 2rem;      /* 32px */
  --space-10: 2.5rem;   /* 40px */
  --space-12: 3rem;     /* 48px */
  --space-16: 4rem;     /* 64px */
  
  /* Border Radius */
  --radius-sm: 4px;
  --radius: 8px;
  --radius-lg: 12px;
  --radius-xl: 16px;
  --radius-full: 9999px;
  
  /* Shadows */
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  
  /* Transitions */
  --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-fast: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Reset and Base Styles */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
  background: linear-gradient(135deg, 
    #F0FBFC 0%, 
    #F5F7F8 25%, 
    #F7F0F8 50%, 
    #F5F7F8 75%, 
    #FDF2F9 100%) !important;
  background-attachment: fixed !important;
  min-height: 100vh;
}

body {
  font-family: var(--font-body);
  font-size: var(--text-base);
  line-height: 1.6;
  color: var(--text-primary);
  background: transparent !important; /* Let html gradient show through */
  margin: 0;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#root {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background: transparent !important;
}

/* Typography */
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-headings);
  font-weight: 600;
  line-height: 1.3;
  color: var(--text-primary);
  margin-bottom: var(--space-4);
}

h1 {
  font-size: var(--text-4xl);
  font-weight: 700;
}

h2 {
  font-size: var(--text-2xl);
  margin-bottom: var(--space-3);
}

h3 {
  font-size: var(--text-xl);
  margin-bottom: var(--space-3);
}

p {
  font-family: var(--font-body) !important;
  margin-bottom: var(--space-4);
  color: var(--text-secondary);
}

/* Force specific elements to use Livvic */
.app-header p {
  font-family: var(--font-body) !important;
}

/* Links */
a {
  color: var(--primary);
  text-decoration: none;
  transition: var(--transition);
}

a:hover {
  color: var(--primary-dark);
  text-decoration: underline;
}

a:focus {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
  border-radius: var(--radius-sm);
}

/* Buttons */
button {
  font-family: var(--font-ui);
  font-size: var(--text-base);
  font-weight: 500;
  line-height: 1;
  border: none;
  border-radius: var(--radius);
  cursor: pointer;
  transition: var(--transition);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  padding: var(--space-3) var(--space-5);
  min-height: 44px;
}

/* Button Variants */
.btn-primary {
  background-color: var(--primary);
  color: var(--text-primary);
  box-shadow: var(--shadow-sm);
}

.btn-primary:hover:not(:disabled) {
  background-color: var(--primary-dark);
  box-shadow: var(--shadow);
  transform: translateY(-1px);
}

.btn-primary:active {
  transform: translateY(0);
}

.btn-secondary {
  background-color: var(--secondary);
  color: var(--text-on-primary);
}

.btn-secondary:hover:not(:disabled) {
  background-color: var(--secondary-dark);
}

.btn-accent {
  background-color: var(--accent);
  color: var(--text-on-primary);
  font-weight: 600;
}

.btn-accent:hover:not(:disabled) {
  background-color: var(--accent-dark);
}

.btn-outline {
  background-color: transparent;
  color: var(--text-primary) !important; /* Dark text for better contrast */
  border: 2px solid var(--primary);
  font-weight: 600; /* Bolder text */
}

.btn-outline:hover:not(:disabled) {
  background-color: var(--primary);
  color: var(--text-primary);
}

.btn-outline.active {
  background-color: var(--primary);
  color: var(--text-primary);
  border-color: var(--primary);
}

.btn-ghost {
  background-color: transparent;
  color: var(--text-secondary);
  box-shadow: none;
}

.btn-ghost:hover:not(:disabled) {
  background-color: var(--border-light);
  color: var(--text-primary);
}

button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none !important;
}

button:focus {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

/* ======= CORE CONTAINER SYSTEM ======= */
/* 
  .container-base: Used for ALL main blocks on page. NEVER override min/max width or padding in any modifier.
  .container--output: Output placeholder/polished output. ONLY override visual, not layout.
  .container--input: For input card (if you want a special visual).
  .container--revisions: For revision history (special background/border only).
*/
.container-base {
  background-color: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: var(--radius-lg);
  padding: var(--space-6);
  box-shadow: var(--shadow-md);
  transition: var(--transition);
  width: 100% !important;
  max-width: 1200px !important;
  min-width: 1000px;
  margin: 0 auto;
}

.container-base:hover {
  box-shadow: var(--shadow-lg);
}

.container--output {
  background: rgba(199, 146, 202, 0.1);
  backdrop-filter: blur(10px);
  border: 2px dashed rgba(199, 146, 202, 0.4);
  box-shadow: var(--shadow-sm);
}

.container--input {
  background-color: rgba(255, 255, 255, 0.95);
  border: 1px solid rgba(148, 220, 222, 0.2);
}

.container--revisions {
  background: rgba(148, 220, 222, 0.07);
  border: 2px solid rgba(148, 220, 222, 0.15);
}

/* When output has content, change styling */
.container--output.has-content {
  background-color: rgba(131, 245, 229, 0.15);
  backdrop-filter: blur(10px);
  border: 2px solid rgba(131, 245, 229, 0.4);
  box-shadow: var(--shadow-md);
}

/* Parent for output area and overlay loader (if using absolute overlays) */
.container-output-parent {
  position: relative;
  width: 100%;
}

/* Visually styled placeholder for output */
.output-placeholder {
  text-align: center;
  padding: var(--space-8);
  color: var(--text-muted);
  font-family: var(--font-body);
}

.output-placeholder h3 {
  font-family: var(--font-headings);
  color: var(--secondary-dark);
  margin-bottom: var(--space-3);
}

.output-placeholder p {
  font-size: var(--text-base);
  margin-bottom: var(--space-4);
}

/* ======= SECTION SPACING ======= */
/* 
  .section: Used for vertical spacing between logical groups.
  Should wrap .container-base blocks.
*/

.section {
  margin-bottom: var(--space-6);
}
.section:last-child {
  margin-bottom: 0;
}

/* ======= CARD SYSTEM ======= */
.card-header {
  margin-bottom: var(--space-5);
}

.card-header h2, .card-header h3 {
  margin-bottom: var(--space-2);
}

.card-content {
  margin-bottom: var(--space-4);
}

/* ======= UTILITY CLASSES ======= */

/* Utility: for button/action rows, horizontally aligned and right-justified */
.action-row {
  display: flex;
  gap: var(--space-3);
  justify-content: flex-end;
  margin-top: var(--space-4);
}

/* Utility container for textarea and counters */
.draft-input-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

/* Polish button utility for sizing and spacing */
.polish-btn {
  font-size: var(--text-lg);
  padding: var(--space-4) var(--space-8);
  min-width: 200px;
  display: inline-flex;
  align-items: center;
  gap: var(--space-2);
}

/* Spinner animation for loading */
.spinner {
  display: inline-block;
  width: 1.2em;
  height: 1.2em;
  border: 2px solid currentColor;
  border-top-color: transparent;
  border-radius: 50%;
  margin-right: var(--space-2);
  animation: spin 1s linear infinite;
  vertical-align: middle;
}

/* ======= RADIO GROUP OFFICIAL PATTERN ======= */
/* 
  .radio-group: Wraps all radio-option elements, use role="radiogroup".
  .radio-option: Label/input/text group for each option, always round radio.
  .radio-label: For span/text if separated from label element.
*/
.radio-group {
  display: flex;
  flex-direction: row;
  gap: var(--space-3);
  width: 100%;
  justify-content: space-between;
  align-items: stretch;
}

.radio-option {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  border: 2px solid var(--border);
  border-radius: var(--radius);
  padding: var(--space-3) var(--space-4);
  background: rgba(255, 255, 255, 0.8);
  cursor: pointer;
  font-size: var(--text-base);
  font-family: var(--font-body);
  transition: var(--transition);
  flex: 1;
  min-height: 60px;
  position: relative;
  box-sizing: border-box;
  justify-content: center;
  text-align: center;
}

.radio-option input[type="radio"] {
  appearance: none;
  -webkit-appearance: none;
  width: 20px;
  height: 20px;
  border: 2px solid var(--border);
  border-radius: 50%; /* ALWAYS round */
  background: #fff;
  margin-right: var(--space-2);
  position: relative;
  cursor: pointer;
  flex-shrink: 0;
  vertical-align: middle;
  display: inline-block;
  min-width: 20px; /* Force fixed width */
  max-width: 20px; /* Force fixed width */
  min-height: 20px; /* Force fixed height */
  max-height: 20px; /* Force fixed height */
}

.radio-option input[type="radio"]:checked {
  background: var(--primary);
  border-color: var(--primary);
}

.radio-option input[type="radio"]:checked::after {
  content: "✔";
  display: block;
  width: 100%;
  height: 100%;
  font-size: 12px;
  color: var(--text-primary);
  position: absolute;
  left: 0;
  top: 0;
  text-align: center;
  line-height: 20px;
  font-weight: bold;
}

.radio-option:hover, .radio-option input[type="radio"]:focus {
  border-color: var(--primary-light);
  background-color: var(--primary-bg);
  transform: translateY(-1px);
}

.radio-option input[type="radio"]:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

.radio-option.selected,
.radio-option:has(input[type="radio"]:checked) {
  border-color: var(--primary);
  background-color: var(--primary-bg);
  color: var(--text-primary);
  font-weight: 600;
}

/* ======= CHIPS SELECTOR COMPONENT ======= */
.chip-selector {
  margin-top: var(--space-4);
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.chip-category {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: var(--space-4);
  margin-bottom: var(--space-4);
  position: relative;
}

.chip-category-label {
  font-family: var(--font-ui);
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--text-primary);
  min-width: 120px;
  flex-shrink: 0;
  padding-top: var(--space-1);
  position: sticky;
  left: 0;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(5px);
  border-radius: var(--radius-sm);
  padding: var(--space-2) var(--space-3);
  z-index: 2;
}

.chip-category-label-wrapper {
  display: flex;
  flex-direction: column;
  min-width: 120px;
  flex-shrink: 0;
  position: sticky;
  left: 0;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(5px);
  border-radius: var(--radius-sm);
  padding: var(--space-2) var(--space-3);
  z-index: 2;
}

.tone-counter {
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
  margin-top: var(--space-1);
}

.tone-count {
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  color: var(--text-muted);
  font-weight: 500;
}

.tone-limit-message {
  font-family: var(--font-ui);
  font-size: var(--text-xs);
  color: var(--error);
  font-weight: 500;
  animation: fadeIn 0.3s ease-out;
  padding: var(--space-1);
  background: rgba(255, 107, 107, 0.1);
  border-radius: var(--radius-sm);
  border: 1px solid rgba(255, 107, 107, 0.2);
}

@media (max-width: 768px) {
  .chip-category-label-wrapper {
    position: static;
    background: transparent;
    backdrop-filter: none;
    padding: 0;
    min-width: auto;
  }
}

.chip-group-wrapper {
  flex: 1;
  position: relative;
  overflow: hidden;
}

.chip-group {
  display: flex;
  flex-wrap: nowrap;
  gap: var(--space-2);
  overflow-x: auto;
  overflow-y: hidden;
  padding: var(--space-1) 0;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE/Edge */
}

.chip-group::-webkit-scrollbar {
  display: none; /* Chrome/Safari */
}

.chip {
  background-color: rgba(255, 255, 255, 0.8);
  border: 1px solid var(--border);
  border-radius: var(--radius-full);
  padding: var(--space-1) var(--space-3);
  font-family: var(--font-ui);
  font-size: var(--text-xs);
  color: var(--text-secondary);
  cursor: pointer;
  transition: var(--transition);
  white-space: nowrap;
  flex-shrink: 0;
}

.chip:hover {
  background-color: var(--primary-bg);
  border-color: var(--primary-light);
  color: var(--text-primary);
  transform: translateY(-1px);
}

.chip--selected {
  background-color: var(--primary);
  border-color: var(--primary);
  color: var(--text-primary);
  font-weight: 500;
}

.chip--selected:hover {
  background-color: var(--primary-dark);
  border-color: var(--primary-dark);
}

/* Scroll hint indicators */
.chip-group-wrapper::after {
  content: "→";
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.9) 30%);
  color: var(--text-muted);
  font-size: var(--text-lg);
  font-weight: bold;
  padding: var(--space-2) var(--space-3);
  pointer-events: none;
  opacity: 0;
  transition: var(--transition);
  z-index: 1;
}

.chip-group-wrapper.has-overflow::after {
  opacity: 1;
}

.chip-group-wrapper.scrolled-end::after {
  opacity: 0;
}

/* Desktop: Allow wrapping when there's space */
@media (min-width: 1200px) {
  .chip-group {
    flex-wrap: wrap;
    overflow-x: visible;
  }
  
  .chip-group-wrapper::after {
    display: none;
  }
}

/* Mobile: Stack vertically, keep horizontal scrolling for chips */
@media (max-width: 768px) {
  .chip-category {
    flex-direction: column;
    gap: var(--space-2);
  }
  
  .chip-category-label {
    min-width: auto;
    position: static;
    background: transparent;
    backdrop-filter: none;
    padding: 0;
    margin-bottom: var(--space-1);
  }
  
  .chip-group {
    justify-content: flex-start;
    padding-bottom: var(--space-2);
  }
  
  .chip-group-wrapper::after {
    display: block;
  }
}

/* ======= SMART CONTENT DETECTOR ======= */
.smart-detector {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-4);
  border-radius: var(--radius-lg);
  margin-top: var(--space-4);
  transition: var(--transition);
  position: relative;
  overflow: hidden;
}

.smart-detector--empty {
  background: rgba(199, 146, 202, 0.1);
  border: 2px dashed rgba(199, 146, 202, 0.3);
  color: var(--text-muted);
}

.smart-detector--analyzing {
  background: linear-gradient(135deg, #E761BD, #C692CA);
  color: white;
  animation: pulse 2s infinite;
}

.smart-detector--uncertain {
  background: rgba(164, 196, 216, 0.1);
  border: 2px dashed rgba(164, 196, 216, 0.4);
  color: var(--text-muted);
}

.smart-detector--suggestion {
  background: linear-gradient(135deg, #E761BD, #C692CA);
  color: white;
  cursor: pointer;
}

.smart-detector--matched {
  background: rgba(131, 245, 229, 0.15);
  border: 2px solid rgba(131, 245, 229, 0.4);
  color: var(--success-dark);
}

.smart-detector-icon {
  font-size: var(--text-2xl);
  flex-shrink: 0;
  width: 40px;
  text-align: center;
}

.analyzing-spinner {
  animation: bounce 1s infinite;
}

.smart-detector-text {
  flex: 1;
}

.smart-detector-title {
  font-family: var(--font-ui);
  font-weight: 600;
  font-size: var(--text-base);
  margin-bottom: var(--space-1);
}

.smart-detector-subtitle {
  font-family: var(--font-ui);
  font-size: var(--text-sm);
  opacity: 0.8;
}

.smart-detector-action {
  background: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.3);
  color: white;
  padding: var(--space-2) var(--space-4);
  border-radius: var(--radius);
  font-family: var(--font-ui);
  font-size: var(--text-sm);
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
}

.smart-detector-action:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-1px);
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-2px); }
}

/* ======= FORM ELEMENTS ======= */
input, textarea, select {
  font-family: var(--font-input);
  font-size: var(--text-base);
  line-height: 1.5;
  color: var(--text-primary);
  background-color: var(--background-alt);
  border: 2px solid var(--border);
  border-radius: var(--radius);
  padding: var(--space-3) var(--space-4);
  transition: var(--transition);
  width: 100%;
}

input:focus, textarea:focus, select:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(148, 220, 222, 0.2);
}

input::placeholder, textarea::placeholder {
  color: var(--text-muted);
  font-family: var(--font-input);
}

textarea {
  resize: vertical;
  min-height: 200px;
}

.draft-input {
  font-family: var(--font-input);
  font-size: var(--text-base);
  min-height: 200px;
  background-color: var(--background-alt);
  line-height: 1.6;
}

/* ======= SIMILARITY SLIDER ======= */
.similarity-slider-container {
  width: 100%;
  padding: var(--space-4);
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: var(--radius);
  border: 1px solid var(--border-light);
}

.slider-value {
  font-family: var(--font-ui);
  font-weight: 600;
  font-size: var(--text-sm);
  text-align: center;
  margin-bottom: var(--space-2);
}

.slider-wrapper {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  margin-bottom: var(--space-2);
}

.similarity-slider {
  flex: 1;
  height: 8px;
  border-radius: var(--radius-full);
  outline: none;
  appearance: none;
  cursor: pointer;
  transition: var(--transition);
  background: linear-gradient(to right, var(--success) 0%, var(--primary) 50%, var(--accent) 100%);
}

.similarity-slider::-webkit-slider-thumb {
  appearance: none;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--background-alt);
  border: 3px solid var(--primary);
  cursor: pointer;
  box-shadow: var(--shadow-sm);
  transition: var(--transition);
}

.similarity-slider::-webkit-slider-thumb:hover {
  transform: scale(1.1);
  box-shadow: var(--shadow);
}

.similarity-slider::-moz-range-thumb {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--background-alt);
  border: 3px solid var(--primary);
  cursor: pointer;
  box-shadow: var(--shadow-sm);
}

.slider-label-left,
.slider-label-right {
  font-size: var(--text-xs);
  color: var(--text-muted);
  white-space: nowrap;
  font-family: var(--font-ui);
}

.slider-description {
  text-align: center;
  margin-top: var(--space-2);
}

.slider-description small {
  color: var(--text-muted);
  font-style: italic;
}

/* ======= OUTPUT STYLING ======= */
.revised-output {
  background-color: rgba(131, 245, 229, 0.15);
  backdrop-filter: blur(10px);
  border: 2px solid rgba(131, 245, 229, 0.4);
  border-radius: var(--radius-lg);
  padding: var(--space-6);
  position: relative;
  box-shadow: var(--shadow-md);
}

.revised-output::before {
  content: '';
  position: absolute;
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 10px solid rgba(131, 245, 229, 0.3);
}

.revised-output h3 {
  color: var(--success-dark);
  margin-bottom: var(--space-4);
  font-weight: 600;
}

.revised-text {
  background-color: var(--background-alt);
  padding: var(--space-5);
  border-radius: var(--radius);
  border-left: 4px solid var(--success);
  font-size: var(--text-base);
  line-height: 1.7;
  white-space: pre-wrap;
  margin-bottom: var(--space-5);
  color: var(--text-primary);
  font-family: var(--font-input);
}

/* ======= SCROLL ELEMENTS ======= */
.scroll-to-top {
  position: fixed;
  bottom: var(--space-6);
  right: var(--space-6);
  background-color: var(--primary);
  color: var(--text-primary);
  border: none;
  border-radius: var(--radius-full);
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: var(--shadow-lg);
  transition: var(--transition);
  z-index: 1000;
  font-size: var(--text-lg);
}

.scroll-to-top:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
}

.scroll-to-top.hidden {
  opacity: 0;
  pointer-events: none;
}

.scroll-up-hint {
  background-color: var(--primary-bg);
  color: var(--primary-dark);
  padding: var(--space-2) var(--space-4);
  border-radius: var(--radius-full);
  font-size: var(--text-sm);
  font-family: var(--font-ui);
  cursor: pointer;
  transition: var(--transition);
  display: inline-flex;
  align-items: center;
  gap: var(--space-1);
}

.scroll-up-hint:hover {
  background-color: var(--primary-light);
}

/* ======= APP LAYOUT ======= */
.app-container {
  flex: 1;
  display: flex;
  flex-direction: column;
  max-width: 1200px !important;
  min-width: 1000px;
  margin: 0 auto;
  padding: var(--space-6);
  gap: var(--space-4);
}

.app-header {
  text-align: center;
  margin-bottom: var(--space-6);
  padding-top: var(--space-8);
}

.app-header h1 {
  background: linear-gradient(135deg, var(--primary), var(--secondary), var(--accent));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin-bottom: var(--space-2);
}

.app-header p {
  font-size: var(--text-lg);
  color: var(--text-secondary);
  max-width: 600px;
  margin: 0 auto;
}

/* ======= REVISION HISTORY ======= */
.revision-history {
  display: grid;
  gap: var(--space-4);
  list-style: none;
  padding: 0;
}

.revision-item {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: var(--space-3);
  align-items: start;
  padding: var(--space-4);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  background-color: rgba(255, 255, 255, 0.8);
  transition: var(--transition);
  margin-bottom: var(--space-3);
  backdrop-filter: blur(5px);
}

.revision-item:hover {
  box-shadow: var(--shadow-sm);
  transform: translateY(-1px);
}

.revision-content {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.revision-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-2);
}

.revision-number {
  font-family: var(--font-ui);
  font-weight: 600;
  color: var(--primary-dark);
  margin-bottom: var(--space-2);
}

.revision-timestamp {
  font-size: var(--text-xs);
  color: var(--text-muted);
}

.revised-text {
  background-color: rgba(255, 255, 255, 0.95);
  padding: var(--space-5);
  border-radius: var(--radius);
  border-left: 4px solid var(--success);
  font-size: var(--text-base);
  line-height: 1.7;
  white-space: pre-wrap;
  margin-bottom: var(--space-5);
  color: var(--text-primary);
  font-family: var(--font-input);
  position: relative;
  z-index: 2; /* Puts it above the mesh animation  for visibility */
  box-shadow: 
    0 0 20px rgba(255, 255, 255, 0.8), /* White glow */
    0 4px 6px rgba(0, 0, 0, 0.1); /* Subtle drop shadow */
}

.revision-actions {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  align-self: start;
}

.revision-actions button {
  min-width: 100px;
  font-size: var(--text-xs);
  padding: var(--space-2) var(--space-3);
  min-height: auto;
}

/* ======= ANIMATIONS ======= */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeIn 0.3s ease-out;
}

/* Animations - Mesh gradient loader */
.mesh-loader-overlay {
  pointer-events: none;
  position: absolute;
  inset: 0;
  z-index: 1; /* Changed from 10 to 1 to go behind text */
  opacity: 0;
  transition: opacity 0.5s cubic-bezier(.77,0,.18,1);
  will-change: opacity;
  border-radius: var(--radius-lg); /* Match container border radius */
  overflow: hidden; /* Contain the blobs within bounds */
}

.mesh-loader-overlay.show {
  opacity: 0.3; /* Reduced opacity so text shows through */
}

.mesh-gradient-blob {
  position: absolute;
  width: 40%; /* Reduced from 60% to stay within bounds */
  height: 40%; /* Reduced from 60% to stay within bounds */
  border-radius: 44% 56% 60% 40% / 53% 40% 60% 47%;
  filter: blur(30px) brightness(1.1) saturate(1.2); /* Reduced blur and effects */
  opacity: 0.8;
  mix-blend-mode: multiply; /* Changed blend mode for better text visibility */
  animation: meshMove1 8s ease-in-out infinite alternate; /* Slower animation */
  transition: opacity 0.5s;
}

/* Adjust blob positioning to stay within container */
.mesh-blob-1 {
  background: radial-gradient(
    circle at 30% 70%,
    var(--secondary-light), /* D9B3DD - light purple */
    var(--primary-light) 70%, /* B8E7E9 - light teal */
    transparent 100%
  );
  left: 10%;
  top: 10%;
  animation-name: meshMove1;
}

.mesh-blob-2 {
  background: radial-gradient(
    circle at 60% 40%,
    var(--success), /* 83F5E5 - cyan */
    var(--primary) 60%, /* 94DCDE - teal */
    transparent 100%
  );
  right: 10%;
  bottom: 10%;
  animation-name: meshMove2;
  animation-delay: 2s;
}

.mesh-blob-3 {
  background: radial-gradient(
    circle at 70% 80%,
    var(--primary-light), /* B8E7E9 - light teal */
    var(--success) 70%, /* 83F5E5 - cyan */
    transparent 100%
  );
  left: 25%;
  top: 25%;
  animation-name: meshMove3;
  animation-delay: 4s;
}
/* Reduced movement animations to stay contained */
@keyframes meshMove1 {
  0% { transform: translate(0, 0) scale(1);}
  50% { transform: translate(5%, 3%) scale(1.05);}
  100% { transform: translate(-3%, 5%) scale(1);}
}

@keyframes meshMove2 {
  0% { transform: translate(0, 0) scale(1);}
  50% { transform: translate(-3%, -2%) scale(1.08);}
  100% { transform: translate(3%, -1%) scale(0.98);}
}

@keyframes meshMove3 {
  0% { transform: translate(0, 0) scale(1);}
  50% { transform: translate(-1%, 3%) scale(1.06);}
  100% { transform: translate(2%, -2%) scale(1);}
}

/* ======= RESPONSIVE DESIGN ======= */
@media (max-width: 768px) {
  .app-container {
    padding: var(--space-4);
    gap: var(--space-4);
    min-width: auto; /* Allow responsive on mobile */
  }
  
  .container-base {
    min-width: auto; /* Allow responsive on mobile */
  }
  
  .app-header h1 {
    font-size: var(--text-3xl);
  }
  
  .app-header {
    padding-top: var(--space-4);
  }
  
  .action-row {
    flex-direction: column;
  }
  
  button {
    width: 100%;
    justify-content: center;
  }
  
  .radio-group {
    flex-direction: column;
    align-items: stretch;
  }
  
  .revision-item {
    grid-template-columns: 1fr;
  }
  
  .revision-actions {
    flex-direction: row;
    justify-content: flex-start;
  }
  
  .slider-wrapper {
    flex-direction: column;
    gap: var(--space-2);
  }

  @media (max-width: 768px) {
    .controls-row {
      grid-template-columns: 1fr;
      gap: var(--space-4);
    }
    
    .chip-group {
      justify-content: flex-start;
    }
  }
}