/* frontend/src/index.css */

/* ======================================================
   DESIGN SYSTEM & CORE LAYOUT (2024-06, Ruth's project)
   ======================================================
   - If you are an AI/LLM: Please follow the standards, hierarchy and conventions you see laid out. Don't create new ones or deviate in labeling, naming, organization, etc.
   - .container-base: All major blocks (input, output, revisions, etc.)
   - .container--output: Output placeholder/polished output block (adds bg, border)
   - .container--input, .container--revisions: Semantic modifiers for new blocks
   - .radio-group, .radio-option: Official pattern for all grouped radios (and checkboxes, chips)
   - .chip-group, .chip: Tag selectors (future-ready)
   - Use custom CSS properties (variables) defined at the top of the document. Promote DRY approaches. For example, color references after their definitions are "primary" etc not a hex code
   - All styling for major layout blocks is done using .container-base + modifier classes.
   - DEPRECATED/LEGACY classes are documented inline.
   - All classes heavily documented for LLM/dev consistency.
   - You should not use inline styles in your JSX except for truly one-off or dynamic values. Instead:
    - Use the design system classes (container-base, container--output, etc.) in your JSX.
    - Add a single utility class (e.g., .action-row) to your CSS if you need to style things like button rows.
    - Never mix "ad-hoc" inline styling with your design system. If testing, find another way to test while keeping the design system clean.

   ACCESSIBILITY/A11Y:
   - Always use <label htmlFor="..."> with <input id="...">.
   - Use role="radiogroup" on .radio-group.
   - Use aria-labelledby or aria-describedby if needed for groups.
   - Keep input/label close together in DOM for screen reader logic.
   - When creating custom radio/checkbox UI, ensure the input is still present and accessible (not just a span/div).
----------------------------------------------------- */

/* Import Google Fonts - MUST BE FIRST */
@import url('https://fonts.googleapis.com/css2?family=Varela+Round&family=Livvic:ital,wght@0,400;0,500;0,600;1,400&family=JetBrains+Mono:wght@400;500&display=swap');

/* Design System Variables */
:root {
  /* Color Palette */
  --primary: #94DCDE;
  --primary-dark: #6BBFC2;
  --primary-light: #B8E7E9;
  --primary-bg: #F0FBFC;
  
  --secondary: #C692CA;
  --secondary-dark: #A56BA9;
  --secondary-light: #D9B3DD;
  --secondary-bg: #F7F0F8;
  
  --accent: #E761BD;
  --accent-dark: #D23FA0;
  --accent-light: #F189D0;
  --accent-bg: #FDF2F9;
  
  --success: #83F5E5;
  --success-dark: #43a796;
  --success-bg: rgba(131, 245, 229, 0.1);
  --warning: #A4C4D8;
  --error: #FF6B6B;
  
  /* Neutrals */
  --surface: #FAFBFC;
  --background: #F5F7F8;
  --background-alt: #FFFFFF;
  --border: #E1E8EA;
  --border-light: #F0F4F5;
  --border-dark: #D1D8DA;
  
  /* Text Colors */
  --text-primary: #1A2B2E;
  --text-secondary: #4A5B5E;
  --text-muted: #7A8B8E;
  --text-on-primary: #FFFFFF;
  --text-on-dark: #FFFFFF;
  
  /* Typography - NEW FONT SYSTEM */
  --font-headings: 'Varela Round', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-body: 'Livvic', Georgia, 'Times New Roman', serif;
  --font-ui: 'Varela Round', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  --font-mono: 'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', Consolas, monospace;
  --font-input: 'JetBrains Mono', 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', Consolas, monospace;
  
  --text-xs: 0.75rem;    /* 12px */
  --text-sm: 0.875rem;   /* 14px */
  --text-base: 1rem;     /* 16px */
  --text-lg: 1.125rem;   /* 18px */
  --text-xl: 1.25rem;    /* 20px */
  --text-2xl: 1.5rem;    /* 24px */
  --text-3xl: 1.875rem;  /* 30px */
  --text-4xl: 2.25rem;   /* 36px */
  
  /* Spacing */
  --space-1: 0.25rem;   /* 4px */
  --space-2: 0.5rem;    /* 8px */
  --space-3: 0.75rem;   /* 12px */
  --space-4: 1rem;      /* 16px */
  --space-5: 1.25rem;   /* 20px */
  --space-6: 1.5rem;    /* 24px */
  --space-8: 2rem;      /* 32px */
  --space-10: 2.5rem;   /* 40px */
  --space-12: 3rem;     /* 48px */
  --space-16: 4rem;     /* 64px */
  
  /* Border Radius */
  --radius-sm: 4px;
  --radius: 8px;
  --radius-lg: 12px;
  --radius-xl: 16px;
  --radius-full: 9999px;
  
  /* Shadows */
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  
  /* Transitions */
  --transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-fast: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Reset and Base Styles */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
  background: linear-gradient(135deg, 
    #F0FBFC 0%, 
    #F5F7F8 25%, 
    #F7F0F8 50%, 
    #F5F7F8 75%, 
    #FDF2F9 100%) !important;
  background-attachment: fixed !important;
  min-height: 100vh;
}

body {
  font-family: var(--font-body);
  font-size: var(--text-base);
  line-height: 1.6;
  color: var(--text-primary);
  background: transparent !important; /* Let html gradient show through */
  margin: 0;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#root {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background: transparent !important;
}

/* Typography */
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-headings);
  font-weight: 600;
  line-height: 1.3;
  color: var(--text-primary);
  margin-bottom: var(--space-4);
}

h1 {
  font-size: var(--text-4xl);
  font-weight: 700;
}

h2 {
  font-size: var(--text-2xl);
  margin-bottom: var(--space-3);
}

h3 {
  font-size: var(--text-xl);
  margin-bottom: var(--space-3);
}

p {
  font-family: var(--font-body) !important;
  margin-bottom: var(--space-4);
  color: var(--text-secondary);
}

/* Force specific elements to use Livvic */
.app-header p {
  font-family: var(--font-body) !important;
}

/* Links */
a {
  color: var(--primary);
  text-decoration: none;
  transition: var(--transition);
}

a:hover {
  color: var(--primary-dark);
  text-decoration: underline;
}

a:focus {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
  border-radius: var(--radius-sm);
}

/* Buttons */
button {
  font-family: var(--font-ui);
  font-size: var(--text-base);
  font-weight: 500;
  line-height: 1;
  border: none;
  border-radius: var(--radius);
  cursor: pointer;
  transition: var(--transition);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  padding: var(--space-3) var(--space-5);
  min-height: 44px;
}

/* Button Variants */
.btn-primary {
  background-color: var(--primary);
  color: var(--text-primary);
  box-shadow: var(--shadow-sm);
  font-weight: 600;
}

.btn-primary:hover:not(:disabled) {
  background-color: var(--primary-light);
  box-shadow: var(--shadow);
  transform: translateY(-1px);
}

.btn-primary:active {
  transform: translateY(0);
}

.btn-secondary {
  background-color: var(--secondary);
  color: var(--text-on-primary);
}

.btn-secondary:hover:not(:disabled) {
  background-color: var(--secondary-light);
}

.btn-accent {
  background-color: var(--accent);
  color: var(--text-on-primary);
  font-weight: 600;
}

.btn-accent:hover:not(:disabled) {
  background-color: var(--accent-light);
}

.btn-outline {
  background-color: transparent;
  color: var(--text-primary) !important; /* Dark text for better contrast */
  border: 2px solid var(--primary);
  font-weight: 600; /* Bolder text */
}

.btn-outline:hover:not(:disabled) {
  background-color: var(--primary-light);
  color: var(--text-primary);
}

.btn-ghost {
  background-color: transparent;
  color: var(--text-secondary);
  border: none;
  font-weight: 500;
}

.btn-ghost:hover:not(:disabled) {
  background-color: var(--background-alt);
  color: var(--text-primary);
  transform: translateY(-1px);
}

.btn-teal {
  background-color: rgba(20, 184, 166, 0.1);
  color: var(--text-primary); /* Darker text color */
  border: 1px solid rgba(20, 184, 166, 0.3);
  font-weight: 600;
}

.btn-teal:hover:not(:disabled) {
  background-color: var(--primary-light);
  border-color: var(--primary);
  transform: translateY(-1px);
}

/* Special class for modal Done button - the ONLY button with dark teal hover */
.btn-modal-done {
  background-color: var(--primary);
  color: var(--text-primary);
  box-shadow: var(--shadow-sm);
  font-weight: 600;
}

.btn-modal-done:hover:not(:disabled) {
  background-color: var(--primary-dark);
  box-shadow: var(--shadow);
  transform: translateY(-1px);
}

.btn-outline.active {
  background-color: var(--primary);
  color: var(--text-primary);
  border-color: var(--primary);
}

.btn-ghost {
  background-color: transparent;
  color: var(--text-secondary);
  box-shadow: none;
}

.btn-ghost:hover:not(:disabled) {
  background-color: var(--border-light);
  color: var(--text-primary);
}

button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none !important;
}

button:focus {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

/* ======= CORE CONTAINER SYSTEM ======= */
/* 
  .container-base: Used for ALL main blocks on page. NEVER override min/max width or padding in any modifier.
  .container--output: Output placeholder/polished output. ONLY override visual, not layout.
  .container--input: For input card (if you want a special visual).
  .container--revisions: For revision history (special background/border only).
*/
.container-base {
  background-color: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: var(--radius-lg);
  padding: var(--space-6);
  box-shadow: var(--shadow-md);
  transition: var(--transition);
  width: 100% !important;
  max-width: 100vw;
  box-sizing: border-box;
  margin: 0 auto;
}

/* Only add min-width on larger screens where it makes sense */
@media (min-width: 1200px) {
  .container-base {
    min-width: 1000px;
  }
}

.container-base:hover {
  box-shadow: var(--shadow-lg);
}

.container--output {
  background: rgba(199, 146, 202, 0.1);
  backdrop-filter: blur(10px);
  border: 2px solid rgba(199, 146, 202, 0.4);
  box-shadow: var(--shadow-sm);
  min-height: 280px; /* Consistent height to prevent content jumping */
}

/* When loading, reduce the purple border opacity for better loader visibility */
.container--output:has(.mesh-loader-overlay.show),
.container--output.loading {
  border: 2px solid rgba(199, 146, 202, 0.2);
  background: rgba(255, 255, 255, 0.7);
}

.container--input {
  background-color: rgba(255, 255, 255, 0.95);
  border: 1px solid rgba(148, 220, 222, 0.2);
}

.container--revisions {
  background: rgba(148, 220, 222, 0.07);
  border: 2px solid rgba(148, 220, 222, 0.15);
}

/* When output has content, change styling */
.container--output.has-content {
  background-color: rgba(131, 245, 229, 0.08); /* More transparent background */
  backdrop-filter: blur(5px); /* Less blur to see gradient better */
  border: 2px solid rgba(131, 245, 229, 0.4);
  box-shadow: var(--shadow-md);
}

/* Parent for output area and overlay loader (if using absolute overlays) */
.container-output-parent {
  position: relative;
  width: 100%;
}

/* Visually styled placeholder for output */
.output-placeholder {
  text-align: center;
  padding: var(--space-8);
  color: var(--text-primary); /* Darker text for better contrast */
  font-family: var(--font-body);
  position: relative;
  z-index: 2; /* Ensure text is above gradient */
  background: rgba(255, 255, 255, 0.95); /* Very opaque white overlay */
  backdrop-filter: blur(8px); /* Smooth backdrop blur */
  border-radius: var(--radius);
  border: 1px solid rgba(255, 255, 255, 0.8); /* Subtle white border */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05); /* Gentle shadow for depth */
  min-height: 200px; /* Prevent content jumping when placeholder disappears */
  display: flex;
  flex-direction: column;
  justify-content: center;
  box-sizing: border-box;
  margin: var(--space-4); /* Inset from container edges for elegant framing */
}

.output-placeholder h3 {
  font-family: var(--font-headings);
  color: var(--secondary-dark);
  margin-bottom: var(--space-3);
}

.output-placeholder p {
  font-size: var(--text-base);
  margin-bottom: var(--space-4);
  min-height: 24px; /* Reserve space to prevent jumping */
}

/* Reserve space for the scroll hint area */
.output-placeholder .scroll-hint-area {
  min-height: 36px; /* Reserve space for scroll hint */
  display: flex;
  justify-content: center;
  align-items: center;
}

/* ======= SECTION SPACING ======= */
/* 
  .section: Used for vertical spacing between logical groups.
  Should wrap .container-base blocks.
*/

.section {
  margin-bottom: var(--space-6);
}
.section:last-child {
  margin-bottom: 0;
}

/* ======= CARD SYSTEM ======= */
.card-header {
  margin-bottom: var(--space-5);
}

.card-header h2, .card-header h3 {
  margin-bottom: var(--space-2);
}

.card-content {
  margin-bottom: var(--space-4);
  display: flex;
  flex-direction: column;
  gap: var(--space-6); /* Add space between child elements like slider and chips */
}

/* ======= UTILITY CLASSES ======= */

/* Utility: for button/action rows, horizontally aligned and right-justified */
.action-row {
  display: flex;
  gap: var(--space-3);
  justify-content: flex-end;
  margin-top: var(--space-4);
}

/* Utility container for textarea and counters */
.draft-input-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

/* Polish button utility for sizing and spacing */
.polish-btn {
  font-size: var(--text-lg);
  padding: var(--space-4) var(--space-8);
  min-width: 240px; /* Increased to accommodate spinner + text */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  white-space: nowrap; /* Prevent text wrapping */
}

/* Spinner animation for loading */
.spinner {
  display: inline-block;
  width: 1.2em;
  height: 1.2em;
  border: 2px solid currentColor;
  border-top-color: transparent;
  border-radius: 50%;
  margin-right: var(--space-2);
  animation: spin 1s linear infinite;
  vertical-align: middle;
}

/* ======= RADIO GROUP OFFICIAL PATTERN ======= */
/* 
  .radio-group: Wraps all radio-option elements, use role="radiogroup".
  .radio-option: Label/input/text group for each option, always round radio.
  .radio-label: For span/text if separated from label element.
*/
.radio-group {
  display: flex;
  flex-direction: row;
  gap: var(--space-3);
  width: 100%;
  justify-content: space-between;
  align-items: stretch;
}

.radio-option {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  border: 2px solid var(--border);
  border-radius: var(--radius);
  padding: var(--space-3) var(--space-3);
  background: rgba(255, 255, 255, 0.8);
  cursor: pointer;
  font-size: var(--text-base);
  font-family: var(--font-body);
  transition: var(--transition);
  flex: 1;
  min-height: 60px;
  position: relative;
  box-sizing: border-box;
  justify-content: center;
  text-align: center;
}

.radio-option input[type="radio"] {
  appearance: none;
  -webkit-appearance: none;
  width: 20px;
  height: 20px;
  border: 2px solid var(--border);
  border-radius: 50%; /* ALWAYS round */
  background: #fff;
  margin-right: var(--space-2);
  position: relative;
  cursor: pointer;
  flex-shrink: 0;
  vertical-align: middle;
  display: inline-block;
  min-width: 20px; /* Force fixed width */
  max-width: 20px; /* Force fixed width */
  min-height: 20px; /* Force fixed height */
  max-height: 20px; /* Force fixed height */
}

.radio-option input[type="radio"]:checked {
  background: var(--primary);
  border-color: var(--primary);
}

.radio-option input[type="radio"]:checked::after {
  content: "✔";
  display: block;
  width: 100%;
  height: 100%;
  font-size: 12px;
  color: var(--text-primary);
  position: absolute;
  left: 0;
  top: 0;
  text-align: center;
  line-height: 20px;
  font-weight: bold;
}

.radio-option:hover, .radio-option input[type="radio"]:focus {
  border-color: var(--primary-light);
  background-color: var(--primary-bg);
  transform: translateY(-1px);
}

.radio-option input[type="radio"]:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

.radio-option.selected,
.radio-option:has(input[type="radio"]:checked) {
  border-color: var(--primary);
  background-color: var(--primary-bg);
  color: var(--text-primary);
  font-weight: 500; /* Reduced from 600 to prevent text wrapping */
}

/* ======= CHIPS SELECTOR COMPONENT ======= */
.chip-selector-wrapper {
  width: 100%;
  overflow: hidden; /* Prevent any overflow */
}

.chip-selector-description {
  text-align: left;
  margin-top: var(--space-2);
  margin-bottom: var(--space-2);
}

.chip-selector-container {
  width: 100%;
  padding: var(--space-4);
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: var(--radius);
  border: 1px solid var(--border-light);
  overflow: hidden; /* Contain all children */
}

.chip-selector {
  margin-top: var(--space-4);
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
  width: 100%; /* Explicit width */
}

.chip-category {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: var(--space-4);
  margin-bottom: var(--space-4);
  position: relative;
  width: 100%;
  max-width: 100%;
  flex-wrap: wrap; /* ✅ critical fix */
  overflow: visible; /* ✅ allow chips to wrap, not vanish */
}


.chip-category-label {
  font-family: var(--font-ui);
  font-size: var(--text-sm);
  font-weight: 600;
  color: var(--text-primary);
  min-width: 120px;
  flex-shrink: 0;
  padding-top: var(--space-1);
  position: sticky;
  left: 0;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(5px);
  border-radius: var(--radius-sm);
  padding: var(--space-2) var(--space-3);
  z-index: 2;
}

.chip-category-label-wrapper {
  display: flex;
  flex-direction: column;
  min-width: auto;
  max-width: none;
  flex-shrink: 0;
  position: static;
  background: transparent;
  backdrop-filter: none;
  padding: 0;
  min-width: auto;
  max-width: none;
  width: 100%;
  box-sizing: border-box;
}

.tone-counter {
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
  margin-top: var(--space-1);
  min-height: 60px; /* Reserve space to prevent layout shifts */
}

.tone-count {
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  color: var(--text-muted);
  font-weight: 500;
}

.tone-limit-message {
  font-family: var(--font-ui);
  font-size: var(--text-xs);
  color: var(--error);
  font-weight: 500;
  animation: fadeIn 0.3s ease-out;
  padding: var(--space-1);
  background: rgba(255, 107, 107, 0.1);
  border-radius: var(--radius-sm);
  border: 1px solid rgba(255, 107, 107, 0.2);
}

/* Chip Group Wrapper Classes */
.chip-group-wrapper {
  flex: 1;
  position: relative;
  max-width: calc(100vw - 200px); /* Keep for mobile */
}

/* Mobile: Keep overflow hidden for horizontal scroll */
@media (max-width: 768px) {
  .chip-group-wrapper {
    overflow: hidden;
    max-width: calc(100vw - 200px);
  }
}

/* Medium Desktop: Enable horizontal scroll */
@media (min-width: 769px) and (max-width: 1199px) {
  .chip-group-wrapper {
    overflow-x: auto;
    overflow-y: visible;
    max-width: calc(100vw - 180px); /* Slightly more space */
  }
}

/* Large Desktop: Allow full wrapping */
@media (min-width: 1200px) {
  .chip-group-wrapper {
    overflow: visible; /* Let chips wrap freely! */
    max-width: none; /* Remove width restrictions */
  }
}

.chip-group {
  display: flex;
  flex-wrap: wrap;     /* <-- allow wrapping! */
  gap: var(--space-2);
  overflow-x: visible; /* <-- disables horizontal scrolling */
  overflow-y: visible;
  padding: var(--space-1) 0;
  scroll-behavior: smooth;
  justify-content: flex-start;
}


.chip-group::-webkit-scrollbar {
  display: none; /* Chrome/Safari */
}

.chip {
  background-color: rgba(255, 255, 255, 0.8);
  border: 1px solid var(--border);
  border-radius: var(--radius-full);
  padding: var(--space-1) var(--space-3);
  font-family: var(--font-ui);
  font-size: var(--text-xs);
  color: var(--text-secondary);
  cursor: pointer;
  transition: var(--transition);
  white-space: nowrap;
  flex-shrink: 0;
  flex: 0 1 auto;        /* Prevents full-width stretch */
  min-width: 90px;       /* Tappable but compact */
  max-width: 46vw;       /* Not too wide for mobile */
  text-align: center;
}

.chip:hover {
  background-color: var(--primary-bg);
  border-color: var(--primary-light);
  color: var(--text-primary);
  transform: translateY(-1px);
}

.chip--selected {
  background-color: var(--primary-bg);
  border: 2px solid var(--primary);
  color: var(--text-primary);
  font-weight: 500;
  box-shadow: none;
}

.chip--selected:hover {
  background-color: var(--primary-bg);
  border: 2px solid var(--primary);
  transform: translateY(-1px);
}

.chip--more {
  background: var(--primary-bg);
  border: 1px dashed var(--primary);
  color: var(--primary-dark);
  font-style: italic;
  font-weight: 500;
  min-width: 80px;
  max-width: 100px;
  cursor: pointer;
}
.chip--more:hover {
  background: var(--primary-light);
  border-color: var(--primary-dark);
}

/* Scroll hint indicators */
.chip-group-wrapper::after {
  content: "→";
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.9) 30%);
  color: var(--text-muted);
  font-size: var(--text-lg);
  font-weight: bold;
  padding: var(--space-2) var(--space-3);
  pointer-events: none;
  opacity: 0;
  transition: var(--transition);
  z-index: 1;
}

.chip-group-wrapper.has-overflow::after {
  opacity: 1;
}

.chip-group-wrapper.scrolled-end::after {
  opacity: 0;
}

/* ======= ENHANCED FADE SYSTEM - FADE TO UNSELECTED STATE ======= */
.chip--selected {
  /* Use CSS custom property for fading with lighter colors */
  background-color: color-mix(in srgb, var(--primary-bg) calc(var(--fade-opacity, 1) * 100%), transparent);
  border: 2px solid color-mix(in srgb, var(--primary) calc(var(--fade-opacity, 1) * 100%), var(--border));
  color: color-mix(in srgb, var(--text-primary) calc(var(--fade-opacity, 1) * 100%), var(--text-secondary));
  font-weight: calc(600 * var(--fade-opacity, 1) + 400 * (1 - var(--fade-opacity, 1)));
  transition: all 0.3s ease-out;
  box-shadow: none;
}

/* Fallback for browsers that don't support color-mix */
@supports not (background-color: color-mix(in srgb, red, blue)) {
  .chip--selected {
    background-color: var(--primary-bg);
    border: 2px solid var(--primary);
    opacity: var(--fade-opacity, 1);
    box-shadow: none;
  }
}

/* ======= ENHANCED FADE SYSTEM FOR MULTIPLE SELECTIONS OF CHIPS ======= */
.selection-counter {
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
  margin-top: var(--space-1);
}

.selection-count {
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  color: var(--text-muted);
  font-weight: 500;
}

.fade-indicator {
  font-family: var(--font-ui);
  font-size: var(--text-xs);
  color: var(--accent);
  font-weight: 500;
  font-style: italic;
}

.tone-message {
  font-family: var(--font-ui);
  font-size: var(--text-xs);
  font-weight: 500;
  padding: var(--space-1) var(--space-2);
  border-radius: var(--radius-sm);
  line-height: 1.2;
  width: 100%; /* Take full width of the label area */
  max-width: 120px; /* Match the label wrapper width */
  box-sizing: border-box; /* Include padding in width calculation */
  word-wrap: break-word; /* Allow long words to break */
  overflow-wrap: break-word; /* Better text wrapping */
  hyphens: auto; /* Add hyphens for better breaking */
  min-height: 24px; /* Reserve consistent space for messages */
  display: flex;
  align-items: center; /* Vertically center text within the reserved space */
}

.tone-message--good {
  color: var(--success-dark);
  background-color: var(--success-bg);
}

.tone-message--ok {
  color: var(--primary-dark);
  background-color: var(--primary-bg);
}

.tone-message--warning {
  color: var(--warning);
  background-color: rgba(164, 196, 216, 0.1);
}

.tone-message--error {
  color: var(--error);
  background-color: rgba(255, 107, 107, 0.1);
}

/* Smooth fade transition for chips */

.chip--selected:hover {
  transform: translateY(-1px) scale(1.02);
}

/* ======= SOCIAL MEDIA PLATFORM MODAL ======= */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  animation: fadeIn 0.2s ease-out;
  /* Ensure it's not affected by any parent positioning */
  transform: none;
  overflow: auto;
}

.modal-content {
  background: white;
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  max-width: 600px;
  width: 90%;
  max-height: 80vh;
  overflow: hidden;
  animation: slideUp 0.3s ease-out;
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-5) var(--space-6);
  border-bottom: 1px solid var(--border);
}

.modal-header h3 {
  margin: 0;
  font-family: var(--font-headings);
  color: var(--text-primary);
}

.modal-close {
  background: none;
  border: none;
  font-size: var(--text-xl);
  cursor: pointer;
  color: var(--text-muted);
  padding: var(--space-1);
  line-height: 1;
  min-height: auto;
}

.modal-close:hover {
  color: var(--text-primary);
}

.modal-body {
  padding: var(--space-6);
  padding-bottom: 0;
  max-height: 70vh;
  overflow-y: auto;
}

.social-modal-section {
  margin-bottom: var(--space-5);
}

.social-modal-section h4 {
  margin: 0 0 var(--space-3) 0;
  color: var(--text-primary);
  font-family: var(--font-headings);
  font-size: var(--text-base);
  font-weight: 600;
}

.social-platforms-chips {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--space-2);
}

.number-counter {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-4);
  padding: var(--space-4);
  background: var(--background-alt);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-lg);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.counter-btn {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 2px solid var(--primary);
  background: var(--background-alt);
  color: var(--primary);
  font-size: var(--text-lg);
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
}

.counter-btn:hover:not(:disabled) {
  background: var(--primary-light);
  color: var(--text-primary);
  transform: scale(1.1);
  box-shadow: 0 4px 12px rgba(20, 184, 166, 0.3);
}

.counter-btn:active:not(:disabled) {
  transform: scale(0.95);
}

.counter-btn:disabled {
  opacity: 0.3;
  cursor: not-allowed;
  transform: none;
}

.counter-display {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 80px;
  padding: var(--space-2);
}

.counter-number {
  font-size: 2rem;
  font-weight: 700;
  color: var(--primary);
  font-family: var(--font-headings);
  line-height: 1;
  transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.counter-label {
  font-size: var(--text-xs);
  color: var(--text-muted);
  font-family: var(--font-ui);
  margin-top: var(--space-1);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Quirky animation when number changes */
.counter-number {
  animation: none;
}

.counter-number:hover {
  animation: wiggle 0.6s ease-in-out;
}

@keyframes wiggle {
  0%, 100% { transform: rotate(0deg) scale(1); }
  25% { transform: rotate(-3deg) scale(1.05); }
  75% { transform: rotate(3deg) scale(1.05); }
}

.modal-actions {
  display: flex;
  justify-content: flex-end;
  padding: var(--space-4) 0;
  border-top: 1px solid var(--border-light);
  margin-top: var(--space-4);
  position: sticky;
  bottom: 0;
  background: white;
  z-index: 10;
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Medium Desktop: Horizontal scrolling for limited space */
@media (min-width: 769px) and (max-width: 1199px) {
  .chip-group {
    flex-wrap: nowrap;
    overflow-x: auto;
    justify-content: flex-start;
  }
  
  .chip-group-wrapper {
    overflow-x: auto;
  }
}

/* Desktop: Allow wrapping when there's space */
@media (min-width: 1200px) {
  .chip-group {
    flex-wrap: wrap;
    overflow-x: visible;
  }
  
  .chip-group-wrapper::after {
    display: none;
  }
}

/* Mobile: Stack vertically, keep horizontal scrolling for chips */
@media (max-width: 768px) {

  .chip-selector-container {
    padding: var(--space-3); /* Reduced padding */
    margin: 0 var(--space-2); /* Add side margins */
  }
  
  .chip-category {
    flex-direction: column;
    gap: var(--space-2);
    width: 100%;
    overflow: visible; /* Allow category to flow naturally */
  }
  
  .chip-category-label {
    min-width: auto;
    position: static;
    background: transparent;
    backdrop-filter: none;
    padding: 0;
    margin-bottom: var(--space-1);
  }

  .chip-category-label-wrapper {
    display: flex;
    flex-direction: column;
    min-width: 120px;
    max-width: 120px; /* Add max-width to prevent expansion */
    flex-shrink: 0;
    position: sticky;
    left: 0;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(5px);
    border-radius: var(--radius-sm);
    padding: var(--space-2) var(--space-3);
    z-index: 2;
    box-sizing: border-box; /* Include padding in width */
  }
  
  .chip-group-wrapper {
    width: 100%;
    max-width: 100%;
    overflow-x: visible;
    overflow-y: visible;
  }
  
  .chip-group {
    flex-wrap: wrap !important;        /* Allow chips to wrap onto new lines */
    overflow-x: visible !important;    /* Remove horizontal scroll */
    justify-content: flex-start;       /* Align chips to the left */
    gap: var(--space-2);               /* Your existing gap variable */
  }

  .chip {
    min-width: 100%;      /* Full width on mobile */
    max-width: 100%;      /* Full width on mobile */
    flex: 1 1 100%;       /* Grow to fill container */
    margin-bottom: var(--space-2); /* Space between rows */
    /* Keep font-size and padding same as desktop, per your preference */
  }
  
  /* Remove scroll indicators on mobile since they can cause issues */
  .chip-group-wrapper::after {
    display: none;
  }
}

/* ======= SMART CONTENT DETECTOR ======= */
.smart-detector {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-4);
  border-radius: var(--radius-lg);
  margin-top: var(--space-4);
  transition: var(--transition);
  position: relative;
  overflow: hidden;
}

.smart-detector--empty {
  background: rgba(199, 146, 202, 0.1);
  border: 2px dashed rgba(199, 146, 202, 0.3);
  color: var(--text-muted);
}

.smart-detector--analyzing {
  background: linear-gradient(135deg, #E761BD, #C692CA);
  color: white;
  animation: pulse 2s infinite;
}

.smart-detector--uncertain {
  background: rgba(164, 196, 216, 0.1);
  border: 2px dashed rgba(164, 196, 216, 0.4);
  color: var(--text-muted);
}

.smart-detector--suggestion {
  background: linear-gradient(135deg, #E761BD, #C692CA);
  color: white;
  cursor: pointer;
}

.smart-detector--matched {
  background: rgba(131, 245, 229, 0.15);
  border: 2px solid rgba(131, 245, 229, 0.4);
  color: var(--success-dark);
}

.smart-detector-icon {
  font-size: var(--text-2xl);
  flex-shrink: 0;
  width: 40px;
  text-align: center;
}

.analyzing-spinner {
  animation: bounce 1s infinite;
}

.smart-detector-text {
  flex: 1;
}

.smart-detector-title {
  font-family: var(--font-ui);
  font-weight: 600;
  font-size: var(--text-base);
  margin-bottom: var(--space-1);
}

.smart-detector-subtitle {
  font-family: var(--font-ui);
  font-size: var(--text-sm);
  opacity: 0.8;
}

.smart-detector-action {
  background: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.3);
  color: white;
  padding: var(--space-2) var(--space-4);
  border-radius: var(--radius);
  font-family: var(--font-ui);
  font-size: var(--text-sm);
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
}

.smart-detector-action:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-1px);
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}

@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-2px); }
}

/* ======= FORM ELEMENTS ======= */
input, textarea, select {
  font-family: var(--font-input);
  font-size: var(--text-base);
  line-height: 1.5;
  color: var(--text-primary);
  background-color: var(--background-alt);
  border: 2px solid var(--border);
  border-radius: var(--radius);
  padding: var(--space-3) var(--space-4);
  transition: var(--transition);
  width: 100%;
}

input:focus, textarea:focus, select:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(148, 220, 222, 0.2);
}

input::placeholder, textarea::placeholder {
  color: var(--text-muted);
  font-family: var(--font-input);
}

textarea {
  resize: vertical;
  min-height: 200px;
}

/* ======= USER CONTENT (Input/Output/History) ======= */
/* Base class for all user-generated content - mono font for computery look */
.user-content,
.draft-input,
.revised-text,
.version-text-container p {
  font-family: var(--font-mono) !important;
  font-size: var(--text-base);
  line-height: 1.7;
  color: var(--text-primary);
  white-space: pre-wrap;
  word-wrap: break-word;
}

.draft-input {
  min-height: 200px;
  background-color: var(--background-alt);
  line-height: 1.6; /* Slightly tighter for input */
}

/* ======= SIMILARITY SLIDER ======= */
.similarity-slider-container {
  width: 100%;
  padding: var(--space-4);
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: var(--radius);
  border: 1px solid var(--border-light);
}

.slider-value {
  font-family: var(--font-ui);
  font-weight: 600;
  font-size: var(--text-sm);
  text-align: center;
  margin-bottom: var(--space-2);
}

.slider-wrapper {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  margin-bottom: var(--space-2);
}

.similarity-slider {
  flex: 1;
  height: 8px;
  border-radius: var(--radius-full);
  outline: none;
  appearance: none;
  cursor: pointer;
  transition: var(--transition);
  background: linear-gradient(to right, var(--success) 0%, var(--primary) 50%, var(--accent) 100%);
}

.similarity-slider::-webkit-slider-thumb {
  appearance: none;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--background-alt);
  border: 3px solid var(--primary);
  cursor: pointer;
  box-shadow: var(--shadow-sm);
  transition: var(--transition);
}

.similarity-slider::-webkit-slider-thumb:hover {
  transform: scale(1.1);
  box-shadow: var(--shadow);
}

.similarity-slider::-moz-range-thumb {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: var(--background-alt);
  border: 3px solid var(--primary);
  cursor: pointer;
  box-shadow: var(--shadow-sm);
}

.slider-label-left,
.slider-label-right {
  font-size: var(--text-xs);
  color: var(--text-muted);
  white-space: nowrap;
  font-family: var(--font-ui);
  transition: font-weight 0.2s ease-out;
}

.slider-description {
  text-align: left;
  margin-top: var(--space-2);
  margin-bottom: var(--space-2);
}

.slider-description small {
  color: var(--text-muted);
  font-style: italic;
}

/* ======= OUTPUT STYLING ======= */
.revised-output {
  background-color: rgba(131, 245, 229, 0.15);
  backdrop-filter: blur(10px);
  border: 2px solid rgba(131, 245, 229, 0.4);
  border-radius: var(--radius-lg);
  padding: var(--space-6);
  position: relative;
  box-shadow: var(--shadow-md);
}

.revised-output::before {
  content: '';
  position: absolute;
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 10px solid rgba(131, 245, 229, 0.3);
}

.revised-output h3 {
  color: var(--success-dark);
  margin-bottom: var(--space-4);
  font-weight: 600;
}

.revised-text {
  background-color: var(--background-alt);
  padding: var(--space-5);
  border-radius: var(--radius);
  border-left: 4px solid var(--success);
  margin-bottom: var(--space-5);
  /* Font styles inherited from .user-content class group */
}

/* ======= SCROLL ELEMENTS ======= */
.scroll-to-top {
  position: fixed;
  bottom: var(--space-6);
  right: var(--space-6);
  background-color: var(--primary);
  color: var(--text-primary);
  border: none;
  border-radius: var(--radius-full);
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: var(--shadow-lg);
  transition: var(--transition);
  z-index: 1000;
  font-size: var(--text-lg);
}

.scroll-to-top:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
}

.scroll-to-top.hidden {
  opacity: 0;
  pointer-events: none;
}

.scroll-up-hint {
  background-color: var(--primary-bg);
  color: var(--primary-dark);
  padding: var(--space-2) var(--space-4);
  border-radius: var(--radius-full);
  font-size: var(--text-sm);
  font-family: var(--font-ui);
  cursor: pointer;
  transition: var(--transition);
  display: inline-flex;
  align-items: center;
  gap: var(--space-1);
  align-self: center; /* Center within the flex container */
}

.scroll-up-hint:hover {
  background-color: var(--primary-light);
}

/* ======= APP LAYOUT ======= */
.app-container {
  flex: 1;
  display: flex;
  flex-direction: column;
  max-width: 1200px !important;
  margin: 0 auto;
  padding: var(--space-6);
  gap: var(--space-4);
}

.app-header {
  text-align: center;
  margin-bottom: var(--space-6);
  padding-top: var(--space-8);
}

.app-header h1 {
  background: linear-gradient(135deg, var(--primary), var(--secondary), var(--accent));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin-bottom: var(--space-2);
}

.app-header p {
  font-size: var(--text-lg);
  color: var(--text-secondary);
  max-width: 600px;
  margin: 0 auto;
}

/* ======= REVISION HISTORY ======= */
.revision-history {
  display: grid;
  gap: var(--space-4);
  list-style: none;
  padding: 0;
}

.revision-item {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: var(--space-3);
  align-items: start;
  padding: var(--space-4);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  background-color: rgba(255, 255, 255, 0.8);
  transition: var(--transition);
  margin-bottom: var(--space-3);
  backdrop-filter: blur(5px);
}

.revision-item:hover {
  box-shadow: var(--shadow-sm);
  transform: translateY(-1px);
}

.revision-content {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.revision-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-2);
}

.revision-number {
  font-family: var(--font-ui);
  font-weight: 600;
  color: var(--primary-dark);
  margin-bottom: var(--space-2);
}

.revision-timestamp {
  font-size: var(--text-xs);
  color: var(--text-muted);
}

.revised-text {
  background-color: rgba(255, 255, 255, 0.85); /* More transparent to show gradient */
  padding: var(--space-4); /* Smaller padding */
  border-radius: var(--radius);
  border-left: 4px solid var(--success);
  font-size: var(--text-base);
  line-height: 1.7;
  white-space: pre-wrap;
  margin: var(--space-6) auto; /* Center with more margin to show gradient */
  max-width: 85%; /* Narrower to show more gradient on sides */
  color: var(--text-primary);
  font-family: var(--font-mono);
  position: relative;
  z-index: 2; /* Puts it above the mesh animation  for visibility */
  box-shadow: 
    0 2px 4px rgba(0, 0, 0, 0.1); /* Just subtle drop shadow, removed white glow */
}

.revision-actions {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  align-self: start;
}

.revision-actions button {
  min-width: 100px;
  font-size: var(--text-xs);
  padding: var(--space-2) var(--space-3);
  min-height: auto;
}

/* ======= ANIMATIONS ======= */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeIn 0.3s ease-out;
}

/* Animations - Mesh gradient loader */
.mesh-loader-overlay {
  pointer-events: none;
  position: absolute;
  inset: 0;
  z-index: 1; /* Changed from 10 to 1 to go behind text */
  opacity: 0;
  transition: opacity 0.5s cubic-bezier(.77,0,.18,1);
  will-change: opacity;
  border-radius: var(--radius-lg); /* Match container border radius */
  overflow: hidden; /* Contain the blobs within bounds */
}

.mesh-loader-overlay.show {
  opacity: 0.7; /* Much stronger visibility */
  animation: pulse 2s ease-in-out infinite;
}

/* More visible during initial load when no content is present */
.container--output:not(.has-content) .mesh-loader-overlay.show {
  opacity: 1; /* Full strength for initial load */
}

.mesh-gradient-blob {
  position: absolute;
  width: 60%; /* Larger blobs for more coverage */
  height: 60%; /* Larger blobs for more coverage */
  border-radius: 44% 56% 60% 40% / 53% 40% 60% 47%;
  filter: blur(25px) brightness(1.4) saturate(1.8); /* Less blur, much more vibrant */
  opacity: 0.95;
  mix-blend-mode: normal; /* Clear visibility for gradient */
  animation: meshMove1 4s ease-in-out infinite alternate; /* Faster animation for more movement */
  transition: opacity 0.5s;
}

/* Adjust blob positioning to stay within container */
.mesh-blob-1 {
  background: radial-gradient(
    circle at 30% 70%,
    rgba(217, 179, 221, 0.9), /* D9B3DD - stronger purple */
    rgba(184, 231, 233, 0.8) 60%, /* B8E7E9 - stronger teal */
    rgba(131, 245, 229, 0.6) 90%,
    transparent 100%
  );
  left: -10%; /* Move more to edge */
  top: -10%;
  animation-name: meshMove1;
}

.mesh-blob-2 {
  background: radial-gradient(
    circle at 60% 40%,
    rgba(184, 231, 233, 0.9), /* B8E7E9 - stronger teal */
    rgba(131, 245, 229, 0.8) 50%, /* 83F5E5 - stronger cyan */
    rgba(198, 146, 202, 0.6) 80%,
    transparent 100%
  );
  right: -10%; /* Move more to edge */
  bottom: -10%;
  animation-name: meshMove2;
  animation-delay: 2s;
}

.mesh-blob-3 {
  background: radial-gradient(
    circle at 70% 80%,
    rgba(217, 179, 221, 0.85), /* D9B3DD - much stronger purple */
    rgba(198, 146, 202, 0.75) 50%, /* C692CA - stronger purple */
    rgba(131, 245, 229, 0.5) 80%,
    transparent 100%
  );
  left: 45%; /* Move to side */
  top: -15%; /* Move to top edge */
  animation-name: meshMove3;
  animation-delay: 4s;
}
/* More noticeable movement animations */
@keyframes meshMove1 {
  0% { transform: translate(0, 0) scale(1) rotate(0deg);}
  50% { transform: translate(15%, 10%) scale(1.25) rotate(5deg);} /* Much more dramatic movement */
  100% { transform: translate(-10%, 15%) scale(0.9) rotate(-3deg);}
}

@keyframes meshMove2 {
  0% { transform: translate(0, 0) scale(1) rotate(0deg);}
  50% { transform: translate(-15%, -10%) scale(1.3) rotate(-5deg);} /* Much more dramatic movement */
  100% { transform: translate(12%, -8%) scale(0.85) rotate(3deg);}
}

@keyframes meshMove3 {
  0% { transform: translate(0, 0) scale(1) rotate(0deg);}
  50% { transform: translate(-12%, 18%) scale(1.2) rotate(6deg);} /* Much more dramatic movement */
  100% { transform: translate(8%, -12%) scale(1.1) rotate(-4deg);}
}

@keyframes pulse {
  0%, 100% { opacity: 0.6; }
  50% { opacity: 0.8; }
}

/* Respect reduced motion preferences by default */
@media (prefers-reduced-motion: reduce) {
  .mesh-gradient-blob {
    animation: none;
  }
  
  .mesh-loader-overlay.show {
    animation: none;
  }
}

/* Override for motion=true URL parameter */
body[data-force-motion="true"] .mesh-gradient-blob {
  animation: meshMove1 4s ease-in-out infinite alternate !important;
}

body[data-force-motion="true"] .mesh-blob-1 {
  animation-name: meshMove1 !important;
}

body[data-force-motion="true"] .mesh-blob-2 {
  animation-name: meshMove2 !important;
  animation-delay: 2s !important;
}

body[data-force-motion="true"] .mesh-blob-3 {
  animation-name: meshMove3 !important;
  animation-delay: 4s !important;
}

body[data-force-motion="true"] .mesh-loader-overlay.show {
  animation: pulse 2s ease-in-out infinite !important;
}

/* ======= RESPONSIVE DESIGN ======= */
@media (max-width: 768px) {
  .app-container,
  .container-base {
    min-width: unset !important;
    width: 100% !important;
    max-width: 100% !important;
    box-sizing: border-box;
    overflow-x: auto;
  }

  .container-base {
    padding: var(--space-3); /* Reduced padding */
    margin: 0 auto;
  }

  .app-header h1 {
    font-size: var(--text-3xl);
  }
  
  .app-header {
    padding-top: var(--space-4);
    max-width: calc(100vw - var(--space-6));
    margin: 0 auto;
  }
  
  .action-row {
    flex-direction: column;
  }
  
  button {
    width: 100%;
    justify-content: center;
  }
  
  .radio-group {
    flex-direction: row;     /* Not column! */
    flex-wrap: wrap;         /* Allow multi-row wrap */
    gap: var(--space-2);     /* Slightly tighter gap for mobile */
    align-items: stretch;
    justify-content: flex-start;
    width: 100%;
  }
  
  
  .revision-item {
    grid-template-columns: 1fr;
  }
  
  .revision-actions {
    flex-direction: row;
    justify-content: flex-start;
  }
  
  .slider-wrapper {
    flex-direction: column;
    gap: var(--space-2);
  }

  /* Chip selector mobile fixes */
  .chip-selector-container {
    padding: var(--space-3);
    max-width: 100%;
    box-sizing: border-box;
  }

  .chip-category {
    flex-direction: column;
    gap: var(--space-2);
  }
  
  .chip-category-label {
    min-width: auto;
    max-width: none; /* Remove width constraints on mobile */
    position: static;
    background: transparent;
    backdrop-filter: none;
    padding: 0;
    margin-bottom: var(--space-1);
  }

  .chip-category-label-wrapper {
    position: static;
    background: transparent;
    backdrop-filter: none;
    padding: 0;
    min-width: auto;
    max-width: none; /* Remove width constraints on mobile */
    width: 100%;
  }
  
  .chip-group {
    flex-wrap: wrap;                   /* Allow chips to wrap onto new lines */
    overflow-x: visible;               /* Remove horizontal scroll */
    justify-content: flex-start;       /* Align chips to the left */
    gap: var(--space-2);               /* Your existing gap variable */
  }
  
  .chip-group-wrapper::after {
    display: none; /* Remove scroll indicators on mobile */
  }

  /* Form and content elements */
  .draft-input,
  .revised-text {
    max-width: 100%;
    box-sizing: border-box;
  }

  .before-after {
    grid-template-columns: 1fr;
  }

  .metrics-grid {
    flex-direction: column;
    gap: var(--space-2);
  }

  /* Tone messages on mobile - remove width constraints */
  .tone-message {
    max-width: none;
    width: auto;
  }

  /* Pro Tips Mobile Fixes */
  .tip-container {
    flex-direction: column;
    gap: var(--space-3);
    text-align: center;
    padding: var(--space-3) var(--space-4);
    margin: 0 var(--space-4);
    max-width: calc(100vw - var(--space-8));
  }
  
  .tip-nav-btn {
    font-size: var(--text-base);
    padding: var(--space-1);
    order: 1;
  }
  
  .tip-content {
    order: 0;
  }

  /* Footer Mobile Fixes */
  .app-footer {
    margin-top: var(--space-6);
    padding: var(--space-4) 0;
    max-width: 100vw;
    overflow-x: auto;
  }
  
  .footer-content {
    grid-template-columns: 1fr;
    gap: var(--space-4);
    padding: 0 var(--space-4);
    max-width: calc(100vw - var(--space-8));
    margin: 0 auto;
    box-sizing: border-box;
  }
  
  .footer-bottom {
    padding: var(--space-3) var(--space-4);
    max-width: calc(100vw - var(--space-8));
    margin: 0 auto;
    box-sizing: border-box;
  }

  /* Force all potentially overflowing elements to respect boundaries! */
  .chip-selector-wrapper,
  .chip-selector,
  .card-content,
  .card-header {
    max-width: 100%;
    box-sizing: border-box;
  }

  /* Ensure all containers respect mobile boundaries */
  .container-base,
  .tip-container,
  .footer-content,
  .footer-bottom {
    box-sizing: border-box;
  }
}

/* ======= PRO TIPS SECTION ======= */
.footer-tips {
  padding: var(--space-5) 0;
  background: transparent;
  border: none;
  border-radius: 0;
  margin-bottom: var(--space-6);
  opacity: 0.85;
  transition: var(--transition);
}

.footer-tips:hover {
  opacity: 1;
}

.tip-container {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  padding: var(--space-4) var(--space-6);
  background: linear-gradient(135deg, 
    rgba(131, 245, 229, 0.08) 0%, 
    rgba(148, 220, 222, 0.06) 100%);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(131, 245, 229, 0.15);
  border-radius: var(--radius-lg);
  border-left: 3px solid rgba(131, 245, 229, 0.4);
  max-width: 1200px;
  margin: 0 auto;
  transition: var(--transition);
}

.tip-container:hover {
  background: linear-gradient(135deg, 
    rgba(131, 245, 229, 0.12) 0%, 
    rgba(148, 220, 222, 0.08) 100%);
  border-color: rgba(131, 245, 229, 0.25);
}

.tip-nav-btn {
  background: rgba(131, 245, 229, 0.2);
  border: none;
  color: var(--success-dark);
  cursor: pointer;
  font-size: var(--text-lg);
  padding: var(--space-2);
  border-radius: var(--radius-sm);
  transition: var(--transition);
  min-height: auto;
  min-width: auto;
  font-weight: 500;
  line-height: 1;
  opacity: 0.7;
}

.tip-nav-btn:hover {
  background: rgba(131, 245, 229, 0.3);
  color: var(--success-dark);
  transform: scale(1.05);
  opacity: 1;
}

.tip-content {
  flex: 1;
  font-size: var(--text-sm);
  line-height: 1.5;
  color: var(--text-secondary);
  font-family: var(--font-body);
  opacity: 0.9;
}

.tip-content strong {
  color: var(--success-dark);
  font-family: var(--font-ui);
  font-weight: 600;
  opacity: 0.8;
}

.tip-source {
  color: var(--success-dark);
  text-decoration: none;
  font-weight: 500;
  font-size: var(--text-xs);
  transition: var(--transition);
  opacity: 0.7;
  border-bottom: 1px dotted rgba(131, 245, 229, 0.4);
}

.tip-source:hover {
  color: var(--success-dark);
  opacity: 1;
  border-bottom-color: var(--success-dark);
}

/* ======= FOOTER STYLES ======= */
.app-footer {
  margin-top: var(--space-8);
  background: rgba(245, 247, 248, 0.3);
  backdrop-filter: blur(5px);
  border-top: 1px solid rgba(225, 232, 234, 0.5);
  padding: var(--space-6) 0;
}

.footer-content {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 var(--space-6);
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--space-6);
  margin-bottom: var(--space-4);
}

.footer-section {
  display: flex;
  flex-direction: column;
}

.footer-section h3 {
  font-family: var(--font-headings);
  font-size: var(--text-base);
  color: var(--text-secondary);
  margin-bottom: var(--space-3);
  font-weight: 600;
}

.footer-section p {
  font-size: var(--text-sm);
  line-height: 1.5;
  color: var(--text-muted);
  margin-bottom: var(--space-2);
}

.footer-link {
  color: var(--primary-dark);
  text-decoration: none;
  font-weight: 500;
  transition: var(--transition);
}

.footer-link:hover {
  color: var(--primary);
  text-decoration: underline;
}

.footer-bottom {
  max-width: 1200px;
  margin: 0 auto;
  padding: var(--space-3) var(--space-6);
  border-top: 1px solid rgba(225, 232, 234, 0.3);
  text-align: center;
}

.footer-bottom p {
  font-size: var(--text-xs);
  color: var(--text-muted);
  margin: 0;
  font-family: var(--font-ui);
  opacity: 0.8;
}

/* ===== CONTENT OUTPUT COMPONENTS (Output, History) ===== */
/* Used for RevisedOutput, SessionHistory - content that users generated */

.session-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
  user-select: none;
  margin-bottom: var(--space-4);
}

.session-header h3 {
  margin: 0;
  margin-bottom: var(--space-4);
  color: var(--success-dark);
  font-family: var(--font-headings);
  font-weight: 600;
}

.toggle-icon {
  color: var(--text-muted);
  font-size: var(--text-sm);
  transition: var(--transition);
}

.session-header:hover .toggle-icon {
  color: var(--text-secondary);
}

.session-content {
  margin-top: var(--space-4);
}

.thread-info {
  background: var(--background-alt);
  border: 1px solid var(--border-light);
  padding: var(--space-3);
  border-radius: var(--radius-sm);
  margin-bottom: var(--space-4);
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--space-4);
}

.thread-info-main {
  display: flex;
  align-items: center;
  gap: var(--space-4);
  flex: 1;
}

.thread-actions {
  display: flex;
  gap: var(--space-2);
  align-items: center;
}

.thread-actions .btn-outline.active {
  background: var(--primary);
  color: var(--background);
  border-color: var(--primary);
}

.thread-stats {
  display: flex;
  align-items: center;
  gap: var(--space-3);
}

.threads-count,
.current-thread {
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  color: var(--text-muted);
}

.current-thread {
  color: var(--text-secondary);
}

.thread-info span {
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  color: var(--text-muted);
}

.permalink-hint {
  font-family: var(--font-ui) !important;
  color: var(--text-primary) !important;
  font-size: var(--text-xs);
  cursor: pointer;
  background: none;
  border: none;
  padding: var(--space-1) var(--space-2);
  border-radius: var(--radius-sm);
  transition: var(--transition);
  font-weight: 500;
}

.permalink-hint:hover {
  background: var(--success-bg);
  color: var(--text-primary);
}

.history-placeholder {
  text-align: center;
  padding: var(--space-8) var(--space-4);
  color: var(--text-muted);
}

.history-placeholder h4 {
  margin: 0 0 var(--space-3) 0;
  color: var(--text-secondary);
  font-family: var(--font-headings);
  font-weight: 600;
}

.history-placeholder p {
  margin: 0 0 var(--space-4) 0;
  font-family: var(--font-body);
  line-height: 1.5;
}

.placeholder-features {
  display: flex;
  justify-content: center;
  gap: var(--space-4);
  flex-wrap: wrap;
}

.placeholder-features span {
  background: var(--background-alt);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-sm);
  padding: var(--space-1) var(--space-2);
  font-size: var(--text-xs);
  color: var(--text-muted);
}

/* Thread separation styling */
.thread-list {
  max-height: 500px;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: var(--space-5);
}

.thread-group {
  border: 1px solid var(--border-light);
  border-radius: var(--radius-md);
  padding: var(--space-4);
  background: rgba(255, 255, 255, 0.5);
}

.thread-separator {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-4);
  padding-bottom: var(--space-2);
}

.thread-separator h4 {
  margin: 0;
  color: var(--text-primary);
  font-family: var(--font-headings);
  font-size: var(--text-base);
  font-weight: 700;
}

.thread-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  width: 100%;
  gap: var(--space-3);
}

.thread-title-section {
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
}

.thread-summary {
  font-family: var(--font-ui);
  font-size: var(--text-sm);
  color: var(--text-secondary);
  font-style: italic;
  font-weight: 500;
}

.thread-copy-btn {
  background: none;
  border: 1px solid var(--border-light);
  border-radius: var(--radius-sm);
  padding: var(--space-2) var(--space-3);
  cursor: pointer;
  font-size: var(--text-xs);
  color: var(--text-secondary);
  transition: var(--transition);
  flex-shrink: 0;
  white-space: nowrap;
  margin-left: var(--space-3);
  min-height: auto;
}

.thread-copy-btn:hover {
  background: var(--primary-bg);
  border-color: var(--primary-light);
  color: var(--text-primary);
}

.thread-metadata {
  display: flex;
  align-items: center;
  gap: var(--space-3);
}

.thread-time {
  font-family: var(--font-mono);
  font-size: var(--text-sm);
  color: var(--text-secondary);
  font-weight: 500;
}

.thread-id {
  font-family: var(--font-mono);
  font-size: var(--text-xs);
  color: var(--text-muted);
  background: var(--background-alt);
  padding: var(--space-1) var(--space-2);
  border-radius: var(--radius-sm);
}

.version-list {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
}

.version-entry {
  border-radius: var(--radius);
  padding: var(--space-4);
  border-left: 4px solid var(--primary);
  border-top-left-radius: calc(var(--radius) + 2px);
  border-bottom-left-radius: calc(var(--radius) + 2px);
  transition: var(--transition);
  /* Soft teal background for revisions */
  background: rgba(20, 184, 166, 0.03);
}

.version-entry.original {
  border-left-color: var(--secondary);
  /* Soft magenta background for originals */
  background: rgba(199, 146, 202, 0.03);
}

.version-entry:hover {
  box-shadow: var(--shadow-sm);
}

.version-header {
  margin-bottom: var(--space-3);
}

.version-label {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.version-main {
  display: flex;
  align-items: center;
  gap: var(--space-3);
}

.version-meta-inline {
  display: flex;
  gap: var(--space-3);
  font-size: var(--text-base);
  color: var(--text-primary);
  flex-wrap: wrap;
  margin-top: var(--space-2);
}

.word-count-meta {
  color: var(--text-primary) !important;
  font-weight: 500;
}

.improvement-indicator {
  color: var(--success-dark) !important;
}

.chip-meta {
  background: rgba(148, 220, 222, 0.15);
  border: 1px solid var(--primary-light);
  border-radius: var(--radius-sm);
  padding: 4px 8px;
  font-size: var(--text-sm) !important;
  color: var(--text-primary) !important;
}

.version-badge {
  padding: 2px var(--space-2);
  border-radius: var(--radius-full);
  font-size: var(--text-xs);
  font-weight: 600;
  font-family: var(--font-ui);
}

.version-badge.original {
  background: var(--secondary);
  color: var(--text-on-primary);
}

.version-badge.version {
  background: var(--primary);
  color: var(--text-primary);
}

.version-time {
  font-size: var(--text-xs);
  color: var(--text-muted);
  font-family: var(--font-mono);
}


.version-content {
  margin-bottom: var(--space-3);
}

.version-text-container {
  position: relative;
  background: var(--background-alt); /* Pure white like output box */
  border-radius: var(--radius-sm);
  border: 1px solid var(--border-light);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.03); /* Subtle depth like output */
  max-height: 400px;
  overflow-y: auto;
}

.version-text-container p {
  padding: var(--space-3);
  padding-right: calc(var(--space-3) + 4rem); /* Space for vertical action buttons */
  margin: 0;
  /* Font styles inherited from .user-content class group */
}

.version-actions {
  position: absolute;
  top: var(--space-2);
  right: var(--space-2);
  display: flex;
  flex-direction: column;
  gap: var(--space-1);
  z-index: 10;
}

.copy-version-btn,
.use-as-original-btn {
  background: none;
  border: 1px solid var(--border);
  border-radius: var(--radius-sm);
  padding: var(--space-1);
  cursor: pointer;
  font-size: 0.75rem;
  color: var(--text-muted);
  transition: var(--transition);
  width: 2rem;
  height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.select-version-btn {
  background: var(--background);
  border: 2px solid var(--primary-light);
  border-radius: var(--radius-sm);
  padding: var(--space-1);
  cursor: pointer;
  font-size: 0.875rem;
  color: var(--primary);
  transition: all 0.2s ease;
  width: 2rem;
  height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
}

.select-version-btn.selected {
  background: var(--primary);
  border-color: var(--primary);
  color: var(--background);
  transform: scale(1.05);
}

.copy-version-btn:hover,
.use-as-original-btn:hover {
  background: var(--surface);
  border-color: var(--primary);
  color: var(--primary);
}

.select-version-btn:hover {
  background: var(--primary-light);
  border-color: var(--primary);
  color: var(--primary);
  transform: scale(1.05);
}


/* Tablet responsive */
@media (max-width: 1024px) and (min-width: 769px) {
  .thread-info {
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-3);
  }
  
  .thread-info-main {
    justify-content: space-between;
  }
  
  .thread-actions {
    align-self: flex-end;
    position: sticky;
    top: var(--space-2);
    z-index: 10;
  }
  
  .thread-header {
    flex-direction: column;
    gap: var(--space-2);
  }
  
  .thread-metadata {
    justify-content: flex-start;
    margin-top: var(--space-1);
  }
  
  .thread-title-section {
    width: 100%;
  }
  
  .thread-copy-btn {
    align-self: flex-end;
    margin-top: var(--space-1);
  }
}

/* Mobile responsive */
@media (max-width: 768px) {
  .version-main {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-1);
  }
  
  .version-meta-inline {
    flex-direction: column;
    gap: var(--space-1);
  }
  
  .version-list {
    max-height: 300px;
  }
  
  .thread-separator {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-2);
  }
  
  .thread-metadata {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-1);
  }
  
  .thread-info {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-3);
  }
  
  .thread-info-main {
    width: 100%;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-2);
  }
  
  .thread-stats {
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    gap: var(--space-2);
  }
  
  .thread-stats .current-thread {
    margin-left: auto;
  }
  
  .version-actions {
    position: fixed;
    top: var(--space-4);
    right: var(--space-2);
    z-index: 20;
    background: var(--background);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: var(--space-1);
    box-shadow: var(--shadow-sm);
  }
  
  .version-text-container p {
    padding-right: var(--space-3); /* Reset padding on mobile */
  }
  
  .thread-copy-btn {
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .version-text-container p {
    padding-right: calc(var(--space-3) + 2.5rem); /* Smaller space on mobile */
  }
}

/* ===== PRIVACY POLICY MODAL ===== */
.privacy-link {
  background: none;
  border: none;
  color: var(--primary-dark);
  text-decoration: underline;
  cursor: pointer;
  font-size: var(--text-sm);
  font-family: var(--font-body);
  transition: var(--transition);
  padding: 0;
  text-align: left;
  display: inline-block;
}

.privacy-link:hover {
  color: var(--primary);
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: var(--space-4);
  overflow-y: auto;
}

/* Don't gray out footer on desktop */
@media (min-width: 769px) {
  .modal-overlay {
    background: rgba(0, 0, 0, 0.1);
  }
}

.modal-content {
  background: var(--background-alt);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  max-width: 600px;
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  border: 1px solid var(--border);
  position: relative;
  margin: auto;
  transform: translateY(0);
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-4) var(--space-4) var(--space-2);
  border-bottom: 1px solid var(--border-light);
}

.modal-header h2 {
  margin: 0;
  color: var(--text-primary);
  font-family: var(--font-headings);
  font-size: var(--text-xl);
  font-weight: 600;
}

.modal-close {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--text-muted);
  padding: 0;
  width: 2rem;
  height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-sm);
  transition: var(--transition);
}

.modal-close:hover {
  background: var(--surface);
  color: var(--text-secondary);
}

.modal-body {
  padding: var(--space-4);
  font-size: var(--text-sm);
  line-height: 1.5;
}

.privacy-section {
  margin-bottom: var(--space-4);
}

.privacy-section h4 {
  color: var(--text-secondary);
  font-family: var(--font-headings);
  font-size: var(--text-sm);
  font-weight: 600;
  margin-bottom: var(--space-2);
}

.privacy-section ul {
  margin: 0;
  padding-left: var(--space-4);
  color: var(--text-muted);
}

.privacy-section li {
  margin-bottom: var(--space-1);
}

.privacy-section li strong {
  color: var(--text-secondary);
}

.privacy-note {
  background: var(--surface);
  border: 1px solid var(--border-light);
  border-radius: var(--radius-sm);
  padding: var(--space-2) var(--space-3);
  font-size: var(--text-xs);
  color: var(--text-muted);
}

.privacy-note strong {
  color: var(--text-secondary);
}

